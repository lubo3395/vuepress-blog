(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{572:function(s,a,t){"use strict";t.r(a);var e=t(17),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"physics-物理引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#physics-物理引擎"}},[s._v("#")]),s._v(" Physics 物理引擎")]),s._v(" "),t("p",[s._v("http://phaser.io/docs/2.6.2/Phaser.Physics.html")]),s._v(" "),t("p",[s._v("物理管理器负责照看所有正在运行的物理系统。\nPhaser 支持 4 种物理系统。Arcade Physics、P2、Ninja Physics 和 Box2D（通过一个商业插件）。")]),s._v(" "),t("p",[s._v("游戏对象（如精灵）只能属于一个物理系统，但你可以在一个游戏中激活多个系统。")]),s._v(" "),t("p",[s._v("例如，你可以让 P2 管理车辆驶过的多边形地形，而它可以发射子弹，使用的是 P2 系统。\n更快（因为更简单）的街机物理系统。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Physics")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("game"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" physicsConfig"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("blockquote",[t("p",[s._v("参数")]),s._v(" "),t("ul",[t("li",[s._v("game\n"),t("ul",[t("li",[s._v("对当前运行的游戏的引用。")])])]),s._v(" "),t("li",[s._v("physicsConfig\n"),t("ul",[t("li",[s._v("一个物理配置对象，在创建时传递给物理世界。")])])])])]),s._v(" "),t("h3",{attrs:{id:"属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[s._v("#")]),s._v(" 属性")]),s._v(" "),t("h4",{attrs:{id:"arcade"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arcade"}},[s._v("#")]),s._v(" arcade")]),s._v(" "),t("h3",{attrs:{id:"方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[s._v("#")]),s._v(" 方法")]),s._v(" "),t("h4",{attrs:{id:"startsystem"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#startsystem"}},[s._v("#")]),s._v(" startSystem()")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化 Arcade Physics 引擎")]),s._v("\ngame"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("physics"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("startSystem")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Phaser"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Physics"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARCADE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h4",{attrs:{id:"clear"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#clear"}},[s._v("#")]),s._v(" clear()")]),s._v(" "),t("p",[s._v("<内部方法> clear()\n清理所有活动的物理系统。这并不破坏它们，它只是清除它们的对象，并在状态改变时被调用")]),s._v(" "),t("h4",{attrs:{id:"destroy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#destroy"}},[s._v("#")]),s._v(" destroy()")]),s._v(" "),t("p",[s._v("销毁所有活动的物理系统。通常只在游戏关闭时调用，在状态交换时不调用。")]),s._v(" "),t("h4",{attrs:{id:"enable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#enable"}},[s._v("#")]),s._v(" enable()")]),s._v(" "),t("blockquote",[t("p",[s._v("enable(object, system, debug)")])]),s._v(" "),t("blockquote",[t("p",[s._v("参数")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("object 【object | array】")]),s._v(" "),t("p",[s._v("要创建物理体的游戏对象。也可以是一个对象的数组，数组中的每个对象都将被创建一个体。")])]),s._v(" "),t("li",[t("p",[s._v("system 【number】可选，默认 Phaser.Physics.ARCADE")]),s._v(" "),t("p",[s._v("将用于创建身体的物理系统。默认为街机物理。")])]),s._v(" "),t("li",[t("p",[s._v("debug 【boolean】可选，默认 false")]),s._v(" "),t("p",[s._v("启用本体的调试绘图。默认为 false。")])])])]),s._v(" "),t("p",[s._v("这将在给定的游戏对象或对象阵列上创建一个默认物理体。\n一个游戏对象在任何时候都只能有一个激活的物理体，而且在该对象被销毁之前，它不能被改变。\n它可以是任何已经启动的物理系统。")]),s._v(" "),t("p",[s._v("Phaser.Physics.Arcade - 一个基于 AABB 的轻量级碰撞系统，具有基本的分离功能。\nPhaser.Physics.P2JS - 一个全身高级物理系统，支持多种物体形状、多边形加载、接触材料、弹簧和约束。\nPhaser.Physics.NINJA - Metanet Softwares N+物理系统的一个移植。先进的 AABB 和圆形与瓦片的碰撞。\nPhaser.Physics.BOX2D - 移植自https://code.google.com/p/box2d-html5。\nPhaser.Physics.MATTER - 全身和轻量级的高级物理系统（仍在开发中）。\nPhaser.Physics.CHIPMUNK 仍在开发中。")]),s._v(" "),t("p",[s._v("如果你需要对创建的身体类型有更多的控制，例如创建一个 Ninja Physics Circle 而不是默认的 AABB，那么请看\n个别物理系统的启用方法，而不是使用这个通用方法。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开启球的物理效果")]),s._v("\ngame"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("physics"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("enable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ball"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Phaser"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Physics"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARCADE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h2",{attrs:{id:""}},[t("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])])])}),[],!1,null,null,null);a.default=n.exports}}]);