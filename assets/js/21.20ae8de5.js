(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{564:function(t,s,n){"use strict";n.r(s);var a=n(17),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"child-process-子进程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#child-process-子进程"}},[t._v("#")]),t._v(" child_process - 子进程")]),t._v(" "),n("p",[t._v("该"),n("code",[t._v("node:child_process")]),t._v("模块提供了以类似于但不完全相同的方式生成子进程的能力"),n("a",{attrs:{href:"http://man7.org/linux/man-pages/man3/popen.3.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("popen(3)")]),n("OutboundLink")],1),t._v("。此功能主要由函数提供"),n("a",{attrs:{href:"https://nodejs.org/dist/latest-v18.x/docs/api/child_process.html#child_processspawncommand-args-options",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("child_process.spawn()")]),n("OutboundLink")],1),t._v("：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" spawn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ls "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ls'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-lh'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/usr'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("输出：")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stderr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("错误：")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'close'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("code")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("子进程退出码：")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("code"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("默认情况下，Node.js 的父进程与衍生的子进程之间会建立 "),n("code",[t._v("stdin")]),t._v("、"),n("code",[t._v("stdout")]),t._v(" 和 "),n("code",[t._v("stderr")]),t._v(" 的管道。 数据能以非阻塞的方式在管道中流通。 有些程序会在内部使用行缓冲 I/O，虽然这并不影响 Node.js，但发送到子进程的数据可能无法被立即使用。")]),t._v(" "),n("p",[t._v("["),n("code",[t._v("child_process.spawn()")]),t._v("] 函数会异步地衍生子进程，且不会阻塞 Node.js 事件循环。 ["),n("code",[t._v("child_process.spawnSync()")]),t._v("] 函数则以同步的方式提供同样的功能，但会阻塞事件循环，直到衍生的子进程退出或被终止。")]),t._v(" "),n("p",[n("code",[t._v("child_process")]),t._v(" 模块还提供了其他一些同步和异步的可选函数。 每个函数都是基于 ["),n("code",[t._v("child_process.spawn()")]),t._v("] 或 ["),n("code",[t._v("child_process.spawnSync()")]),t._v("] 实现的。")]),t._v(" "),n("ul",[n("li",[t._v("["),n("code",[t._v("child_process.exec()")]),t._v("]: 衍生一个 shell 并在 shell 上运行命令，当完成时会传入 "),n("code",[t._v("stdout")]),t._v(" 和 "),n("code",[t._v("stderr")]),t._v(" 到回调函数。")]),t._v(" "),n("li",[t._v("["),n("code",[t._v("child_process.execFile()")]),t._v("]: 类似 ["),n("code",[t._v("child_process.exec()")]),t._v("]，但直接衍生命令，且无需先衍生 shell。")]),t._v(" "),n("li",[t._v("["),n("code",[t._v("child_process.fork()")]),t._v("]: 衍生一个新的 Node.js 进程，并通过建立 IPC 通讯通道来调用指定的模块，该通道允许父进程与子进程之间相互发送信息。")]),t._v(" "),n("li",[t._v("["),n("code",[t._v("child_process.execSync()")]),t._v("]: ["),n("code",[t._v("child_process.exec()")]),t._v("] 的同步函数，会阻塞 Node.js 事件循环。")]),t._v(" "),n("li",[t._v("["),n("code",[t._v("child_process.execFileSync()")]),t._v("]: ["),n("code",[t._v("child_process.execFile()")]),t._v("] 的同步函数，会阻塞 Node.js 事件循环。")])]),t._v(" "),n("p",[t._v("对于某些特例，如自动化的 shell 脚本，"),n("a",{attrs:{href:"https://www.nodeapp.cn/child_process.html#child_process_synchronous_process_creation",target:"_blank",rel:"noopener noreferrer"}},[t._v("同步的函数"),n("OutboundLink")],1),t._v("可能更方便。 但大多数情况下，同步的函数会明显影响性能，因为它会拖延事件循环直到衍生进程完成。")]),t._v(" "),n("h2",{attrs:{id:"创建异步进程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建异步进程"}},[t._v("#")]),t._v(" 创建异步进程")]),t._v(" "),n("p",[t._v("["),n("code",[t._v("child_process.spawn()")]),t._v("]、["),n("code",[t._v("child_process.fork()")]),t._v("]、["),n("code",[t._v("child_process.exec()")]),t._v("] 和 ["),n("code",[t._v("child_process.execFile()")]),t._v("] 函数都遵循 Node.js API 惯用的异步编程模式。")]),t._v(" "),n("p",[t._v("每个函数都返回 ["),n("code",[t._v("ChildProcess")]),t._v("] 实例。 这些实例实现了 Node.js ["),n("code",[t._v("EventEmitter")]),t._v("] API，允许父进程注册监听器函数，在子进程生命周期期间，当特定的事件发生时会调用这些函数。")]),t._v(" "),n("p",[t._v("["),n("code",[t._v("child_process.exec()")]),t._v("] 和 ["),n("code",[t._v("child_process.execFile()")]),t._v("] 函数可以额外指定一个可选的 "),n("code",[t._v("callback")]),t._v(" 函数，当子进程结束时会被调用。")]),t._v(" "),n("h3",{attrs:{id:"在-windows-上衍生-bat-和-cmd-文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在-windows-上衍生-bat-和-cmd-文件"}},[t._v("#")]),t._v(" 在 Windows 上衍生 "),n("code",[t._v(".bat")]),t._v(" 和 "),n("code",[t._v(".cmd")]),t._v(" 文件")]),t._v(" "),n("p",[t._v("["),n("code",[t._v("child_process.exec()")]),t._v("] 和 ["),n("code",[t._v("child_process.execFile()")]),t._v("] 之间的区别会因平台而不同。")]),t._v(" "),n("p",[t._v("在类 Unix 操作系统（Unix、 Linux、 macOS）上，["),n("code",[t._v("child_process.execFile()")]),t._v("] 效率更高，因为它不需要衍生 shell。")]),t._v(" "),n("p",[t._v("但在 Windows 上，"),n("code",[t._v(".bat")]),t._v(" 和 "),n("code",[t._v(".cmd")]),t._v(" 文件在没有终端的情况下是不可执行的，因此不能使用 ["),n("code",[t._v("child_process.execFile()")]),t._v("] 启动。")]),t._v(" "),n("p",[t._v("可以使用设置了 "),n("code",[t._v("shell")]),t._v(" 选项的 ["),n("code",[t._v("child_process.spawn()")]),t._v("]、或使用 ["),n("code",[t._v("child_process.exec()")]),t._v("]、或衍生 "),n("code",[t._v("cmd.exe")]),t._v(" 并将 "),n("code",[t._v(".bat")]),t._v(" 或 "),n("code",[t._v(".cmd")]),t._v(" 文件作为参数传入（也就是 "),n("code",[t._v("shell")]),t._v(" 选项和 ["),n("code",[t._v("child_process.exec()")]),t._v("] 所做的工作）。")]),t._v(" "),n("p",[t._v("如果脚本文件名包含空格，则需要加上引号。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 仅限 Windows 系统")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" spawn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bat "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cmd.exe'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/c'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my.bat'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nbat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nbat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stderr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nbat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'exit'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("code")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("子进程退出码：")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("code"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" exec "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my.bat'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stdout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stderr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stdout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文件名带有空格的脚本：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bat "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"my script.cmd\"'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" shell"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"my script.cmd\" a b'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stdout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stderr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"child-process-exec"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#child-process-exec"}},[t._v("#")]),t._v(" child_process.exec")]),t._v(" "),n("p",[n("strong",[t._v("child_process.exec(command[, options][, callback])")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("command")]),t._v(" 运行的命令，参数使用空格分隔。")]),t._v(" "),n("li",[t._v("options\n"),n("ul",[n("li",[n("code",[t._v("cwd")]),t._v(" 子进程的当前工作目录。")]),t._v(" "),n("li",[n("code",[t._v("env")]),t._v(" 环境变量键值对。")]),t._v(" "),n("li",[n("code",[t._v("encoding")]),t._v(" 默认为 "),n("code",[t._v("'utf8'")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("shell")]),t._v(" 执行命令的 shell。在 UNIX 上默认为 "),n("code",[t._v("'/bin/sh'")]),t._v("，在 Windows 上默认为 "),n("code",[t._v("process.env.ComSpec")]),t._v("。详见"),n("a",{attrs:{href:"https://www.nodeapp.cn/child_process.html#child_process_shell_requirements",target:"_blank",rel:"noopener noreferrer"}},[t._v("Shell的要求"),n("OutboundLink")],1),t._v("与"),n("a",{attrs:{href:"https://www.nodeapp.cn/child_process.html#child_process_default_windows_shell",target:"_blank",rel:"noopener noreferrer"}},[t._v("Windows默认的Shell"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("timeout")]),t._v(" 默认为 "),n("code",[t._v("0")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("maxBuffer")]),t._v(" "),n("code",[t._v("stdout")]),t._v(" 或 "),n("code",[t._v("stderr")]),t._v(" 允许的最大字节数。默认为 "),n("code",[t._v("200*1024")]),t._v("。如果超过限制，则子进程会被终止。详见 "),n("a",{attrs:{href:"https://www.nodeapp.cn/child_process.html#child_process_maxbuffer_and_unicode",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("maxBuffer")]),t._v("与Unicode"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("killSignal")]),t._v(" 默认为 "),n("code",[t._v("'SIGTERM'")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("uid")]),t._v(" 设置进程的用户标识，详见 "),n("a",{attrs:{href:"http://man7.org/linux/man-pages/man2/setuid.2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("setuid(2)"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("gid")]),t._v(" 设置进程的组标识，详见 "),n("a",{attrs:{href:"http://man7.org/linux/man-pages/man2/setgid.2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("setgid(2)"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("windowsHide")]),t._v("隐藏子进程的控制台窗口，常用于 Windows 系统。默认为 "),n("code",[t._v("false")]),t._v("。")])])]),t._v(" "),n("li",[t._v("callback 进程终止时调用。\n"),n("ul",[n("li",[n("code",[t._v("error")])]),t._v(" "),n("li",[n("code",[t._v("stdout")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" | "),n("a",{attrs:{href:"https://www.nodeapp.cn/buffer.html#buffer_class_buffer",target:"_blank",rel:"noopener noreferrer"}},[t._v("buffer"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("code",[t._v("stderr")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" | "),n("a",{attrs:{href:"https://www.nodeapp.cn/buffer.html#buffer_class_buffer",target:"_blank",rel:"noopener noreferrer"}},[t._v("buffer"),n("OutboundLink")],1)])])]),t._v(" "),n("li",[t._v("返回: "),n("a",{attrs:{href:"https://www.nodeapp.cn/child_process.html#child_process_class_childprocess",target:"_blank",rel:"noopener noreferrer"}},[t._v("ChildProcess"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("衍生一个 shell 并在 shell 中执行 "),n("code",[t._v("command")]),t._v("，且缓冲任何产生的输出。")]),t._v(" "),n("p",[t._v("传入函数的 "),n("code",[t._v("command")]),t._v(" 字符串会被 shell 直接处理，特殊字符（"),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/List_of_command-line_interpreters",target:"_blank",rel:"noopener noreferrer"}},[t._v("因shell而异"),n("OutboundLink")],1),t._v("）需要相应处理：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"/path/to/test file/test.sh\" arg1 arg2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用双引号使路径中的空格不会被理解为多个参数。")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'echo \"The \\\\$HOME variable is $HOME\"'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个 $HOME 会被转义，而第二个不会。")]),t._v("\n")])])]),n("p",[t._v("注意：不要把未经检查的用户输入传入到该函数。 任何包括 shell 元字符的输入都可被用于触发任何命令的执行。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" exec "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cat *.js bad_file | wc -l'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stdout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stderr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("exec error: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("error"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("stdout: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("stdout"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("stderr: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("stderr"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("如果提供了一个 "),n("code",[t._v("callback")]),t._v(" 函数，则它被调用时会带上参数 "),n("code",[t._v("(error, stdout, stderr)")]),t._v("。 当成功时，"),n("code",[t._v("error")]),t._v(" 会是 "),n("code",[t._v("null")]),t._v("。 当失败时，"),n("code",[t._v("error")]),t._v(" 会是一个 ["),n("code",[t._v("Error")]),t._v("] 实例。 "),n("code",[t._v("error.code")]),t._v(" 属性会是子进程的退出码，"),n("code",[t._v("error.signal")]),t._v(" 会被设为终止进程的信号。 除 "),n("code",[t._v("0")]),t._v(" 以外的任何退出码都被认为是一个错误。")]),t._v(" "),n("p",[t._v("传给回调的 "),n("code",[t._v("stdout")]),t._v(" 和 "),n("code",[t._v("stderr")]),t._v(" 参数会包含子进程的 stdout 和 stderr 的输出。 默认情况下，Node.js 会解码输出为 UTF-8，并将字符串传给回调。 "),n("code",[t._v("encoding")]),t._v(" 选项可用于指定用于解码 stdout 和 stderr 输出的字符编码。 如果 "),n("code",[t._v("encoding")]),t._v(" 是 "),n("code",[t._v("'buffer'")]),t._v("、或一个无法识别的字符编码，则传入 "),n("code",[t._v("Buffer")]),t._v(" 对象到回调函数。")]),t._v(" "),n("p",[n("code",[t._v("options")]),t._v(" 参数可以作为第二个参数传入，用于自定义如何衍生进程。 默认的选项是：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" defaults "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  encoding"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  timeout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  maxBuffer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  killSignal"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SIGTERM'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  cwd"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  env"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("如果 "),n("code",[t._v("timeout")]),t._v(" 大于 "),n("code",[t._v("0")]),t._v("，当子进程运行超过 "),n("code",[t._v("timeout")]),t._v(" 毫秒时，父进程就会发送由 "),n("code",[t._v("killSignal")]),t._v(" 属性标识的信号（默认为 "),n("code",[t._v("'SIGTERM'")]),t._v("）。")]),t._v(" "),n("p",[t._v("注意：不像 POSIX 系统调用中的 "),n("a",{attrs:{href:"http://man7.org/linux/man-pages/man3/exec.3.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("exec(3)"),n("OutboundLink")],1),t._v("，"),n("code",[t._v("child_process.exec()")]),t._v(" 不会替换现有的进程，且使用一个 shell 来执行命令。")]),t._v(" "),n("p",[t._v("如果调用该方法的 ["),n("code",[t._v("util.promisify()")]),t._v("][] 版本，将会返回一个包含 "),n("code",[t._v("stdout")]),t._v(" 和 "),n("code",[t._v("stderr")]),t._v(" 的 Promise 对象。在出现错误的情况下，将返回 rejected 状态的 promise，拥有与回调函数一样的 "),n("code",[t._v("error")]),t._v(" 对象，但附加了 "),n("code",[t._v("stdout")]),t._v(" 和 "),n("code",[t._v("stderr")]),t._v(" 属性。")]),t._v(" "),n("p",[t._v("例子")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" util "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'util'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" exec "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" util"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("promisify")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsExample")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" stdout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stderr "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ls'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stdout:'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stdout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stderr:'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stderr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsExample")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"child-process-execfile"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#child-process-execfile"}},[t._v("#")]),t._v(" child_process.execFile")]),t._v(" "),n("p",[n("strong",[t._v("child_process.execFile(file[, args][, options][, callback])")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("file")]),t._v(" string 要运行的可执行文件的名称或路径。")]),t._v(" "),n("li",[n("code",[t._v("args")]),t._v(" string 字符串参数列表。")]),t._v(" "),n("li",[t._v("options\n"),n("ul",[n("li",[n("code",[t._v("cwd")]),t._v(" "),n("em",[t._v("string")]),t._v(" 子进程的当前工作目录。")]),t._v(" "),n("li",[n("code",[t._v("env")]),t._v(" "),n("em",[t._v("object")]),t._v(" 环境变量键值对。")]),t._v(" "),n("li",[n("code",[t._v("encoding")]),t._v(" "),n("em",[t._v("string")]),t._v(" 默认为 "),n("code",[t._v("'utf8'")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("timeout")]),t._v(" "),n("em",[t._v("number")]),t._v(" 默认为 "),n("code",[t._v("0")]),t._v("。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.nodeapp.cn/child_process.html#child_process_maxbuffer_and_unicode",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("maxBuffer")]),n("OutboundLink")],1),t._v(" "),n("em",[t._v("number")]),t._v(" stdout 或 stderr 允许的最大字节数。 默认为 "),n("code",[t._v("200*1024")]),t._v("。 如果超过限制，则子进程会被终止。 See caveat at ["),n("code",[t._v("maxBuffer")]),t._v(" and Unicode][].")]),t._v(" "),n("li",[n("code",[t._v("killSignal")]),t._v(" "),n("em",[t._v("string")]),t._v("  | "),n("em",[t._v("number")]),t._v("  默认为 "),n("code",[t._v("'SIGTERM'")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("uid")]),t._v(" "),n("em",[t._v("number")]),t._v("  设置该进程的用户标识。（详见 "),n("a",{attrs:{href:"http://man7.org/linux/man-pages/man2/setuid.2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("setuid(2)"),n("OutboundLink")],1),t._v("）")]),t._v(" "),n("li",[n("code",[t._v("gid")]),t._v(" "),n("em",[t._v("number")]),t._v("  设置该进程的组标识。（详见 "),n("a",{attrs:{href:"http://man7.org/linux/man-pages/man2/setgid.2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("setgid(2)"),n("OutboundLink")],1),t._v("）")]),t._v(" "),n("li",[n("code",[t._v("windowsHide")]),t._v(" "),n("em",[t._v("boolean")]),t._v("  是否隐藏在Windows系统下默认会弹出的子进程控制台窗口。 "),n("strong",[t._v("默认为:")]),t._v(" "),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("windowsVerbatimArguments")]),t._v(" "),n("em",[t._v("boolean")]),t._v("   决定在Windows系统下是否使用转义参数。 在Linux平台下会自动忽略，当指令 "),n("code",[t._v("shell")]),t._v(" 存在的时该属性将自动被设置为true。"),n("strong",[t._v("默认为:")]),t._v(" "),n("code",[t._v("false")]),t._v("。")])])]),t._v(" "),n("li",[t._v("callback 当进程终止时调用，并带上输出。\n"),n("ul",[n("li",[n("code",[t._v("error")])]),t._v(" "),n("li",[n("code",[t._v("stdout")])]),t._v(" "),n("li",[n("code",[t._v("stderr")])])])]),t._v(" "),n("li",[t._v("返回: "),n("a",{attrs:{href:"https://www.nodeapp.cn/child_process.html#child_process_class_childprocess",target:"_blank",rel:"noopener noreferrer"}},[t._v("ChildProcess"),n("OutboundLink")],1)])]),t._v(" "),n("p",[n("code",[t._v("child_process.execFile()")]),t._v(" 函数类似 ["),n("code",[t._v("child_process.exec()")]),t._v("]，除了不衍生一个 shell。 而是，指定的可执行的 "),n("code",[t._v("file")]),t._v(" 被直接衍生为一个新进程，这使得它比 ["),n("code",[t._v("child_process.exec()")]),t._v("] 更高效。")]),t._v(" "),n("p",[t._v("它支持和 ["),n("code",[t._v("child_process.exec()")]),t._v("] 一样的选项。 由于没有衍生 shell，因此不支持像 I/O 重定向和文件查找这样的行为。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" execFile "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" child "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("execFile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--version'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stdout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stderr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stdout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("传给回调的 "),n("code",[t._v("stdout")]),t._v(" 和 "),n("code",[t._v("stderr")]),t._v(" 参数会包含子进程的 stdout 和 stderr 的输出。 默认情况下，Node.js 会解码输出为 UTF-8，并将字符串传给回调。 "),n("code",[t._v("encoding")]),t._v(" 选项可用于指定用于解码 stdout 和 stderr 输出的字符编码。 如果 "),n("code",[t._v("encoding")]),t._v(" 是 "),n("code",[t._v("'buffer'")]),t._v("、或一个无法识别的字符编码，则传入 "),n("code",[t._v("Buffer")]),t._v(" 对象到回调函数。")]),t._v(" "),n("p",[t._v("如果调用该方法的 ["),n("code",[t._v("util.promisify()")]),t._v("][] 版本， 它会返回一个拥有 "),n("code",[t._v("stdout")]),t._v(" 和 "),n("code",[t._v("stderr")]),t._v(" 属性的 Promise 对象. 在发生错误的情况下, 返回一个 rejected 状态的 promise, 拥有与回调 函数一样的 "),n("code",[t._v("error")]),t._v(" 对象, 但是附加了 "),n("code",[t._v("stdout")]),t._v(" 和 "),n("code",[t._v("stderr")]),t._v(" 这两个属性.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" util "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'util'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" execFile "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" util"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("promisify")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" stdout "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("execFile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--version'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stdout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"child-process-fork"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#child-process-fork"}},[t._v("#")]),t._v(" child_process.fork")]),t._v(" "),n("p",[n("strong",[t._v("child_process.fork(modulePath[, args][, options])")])]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("modulePath")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" 要在子进程中运行的模块。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("args")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"noopener noreferrer"}},[t._v("array"),n("OutboundLink")],1),t._v(" 字符串参数列表。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("options")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("cwd")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" 子进程的当前工作目录。")]),t._v(" "),n("li",[n("code",[t._v("env")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",target:"_blank",rel:"noopener noreferrer"}},[t._v("object"),n("OutboundLink")],1),t._v(" 环境变量键值对。")]),t._v(" "),n("li",[n("code",[t._v("execPath")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" 用来创建子进程的执行路径。")]),t._v(" "),n("li",[n("code",[t._v("execArgv")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"noopener noreferrer"}},[t._v("array"),n("OutboundLink")],1),t._v(" 要传给执行路径的字符串参数列表。默认为 "),n("code",[t._v("process.execArgv")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("silent")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1),t._v(" 如果为 "),n("code",[t._v("true")]),t._v("，则子进程中的 stdin、 stdout 和 stderr 会被导流到父进程中，否则它们会继承自父进程，详见 ["),n("code",[t._v("child_process.spawn()")]),t._v("] 的 ["),n("code",[t._v("stdio")]),t._v("] 中的 "),n("code",[t._v("'pipe'")]),t._v(" 和 "),n("code",[t._v("'inherit'")]),t._v(" 选项。 默认: "),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("stdio")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"noopener noreferrer"}},[t._v("array"),n("OutboundLink")],1),t._v(" | "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v(" 详见 ["),n("code",[t._v("child_process.spawn()")]),t._v("] 的 ["),n("code",[t._v("stdio")]),t._v("]。 当提供了该选项，则它会覆盖 "),n("code",[t._v("silent")]),t._v("。 如果使用了数组变量，则该数组必须包含一个值为 "),n("code",[t._v("'ipc'")]),t._v(" 的子项，否则会抛出错误。 例如 "),n("code",[t._v("[0, 1, 2, 'ipc']")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("windowsVerbatimArguments")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1),t._v(" 决定在Windows系统下是否使用转义参数。 在Linux平台下会自动忽略。"),n("strong",[t._v("默认值:")]),t._v(" "),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("uid")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v(" 设置该进程的用户标识。（详见 "),n("a",{attrs:{href:"http://man7.org/linux/man-pages/man2/setuid.2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("setuid(2)"),n("OutboundLink")],1),t._v("）")]),t._v(" "),n("li",[n("code",[t._v("gid")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v(" 设置该进程的组标识。（详见 "),n("a",{attrs:{href:"http://man7.org/linux/man-pages/man2/setgid.2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("setgid(2)"),n("OutboundLink")],1),t._v("）")])])]),t._v(" "),n("li",[n("p",[t._v("返回: "),n("a",{attrs:{href:"https://www.nodeapp.cn/child_process.html#child_process_class_childprocess",target:"_blank",rel:"noopener noreferrer"}},[t._v("class_childprocess"),n("OutboundLink")],1)])])]),t._v(" "),n("p",[t._v("该"),n("code",[t._v("child_process.fork()")]),t._v("方法是一种特殊情况， "),n("a",{attrs:{href:"https://nodejs.org/dist/latest-v18.x/docs/api/child_process.html#child_processspawncommand-args-options",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("child_process.spawn()")]),n("OutboundLink")],1),t._v("专门用于生成新的 Node.js 进程。像"),n("a",{attrs:{href:"https://nodejs.org/dist/latest-v18.x/docs/api/child_process.html#child_processspawncommand-args-options",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("child_process.spawn()")]),n("OutboundLink")],1),t._v("，"),n("a",{attrs:{href:"https://nodejs.org/dist/latest-v18.x/docs/api/child_process.html#class-childprocess",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("ChildProcess")]),n("OutboundLink")],1),t._v("返回一个对象。返回的"),n("a",{attrs:{href:"https://nodejs.org/dist/latest-v18.x/docs/api/child_process.html#class-childprocess",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("ChildProcess")]),n("OutboundLink")],1),t._v("将有一个额外的内置通信通道，允许消息在父子之间来回传递。"),n("a",{attrs:{href:"https://nodejs.org/dist/latest-v18.x/docs/api/child_process.html#subprocesssendmessage-sendhandle-options-callback",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("subprocess.send()")]),n("OutboundLink")],1),t._v("详情请见。")]),t._v(" "),n("p",[t._v("请记住，生成的 Node.js 子进程独立于父进程，但在两者之间建立的 IPC 通信通道除外。每个进程都有自己的内存，有自己的 V8 实例。由于需要额外的资源分配，因此不建议生成大量子 Node.js 进程。")]),t._v(" "),n("p",[t._v("默认情况下，将使用父进程的"),n("code",[t._v("child_process.fork()")]),t._v("生成新的 Node.js 实例 。对象中的属性 "),n("a",{attrs:{href:"https://nodejs.org/dist/latest-v18.x/docs/api/process.html#processexecpath",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("process.execPath")]),n("OutboundLink")],1),t._v("允许使用替代执行路径。"),n("code",[t._v("execPath``options")])]),t._v(" "),n("p",[t._v("使用自定义启动的 Node.js 进程将使用使用子进程上的"),n("code",[t._v("execPath")]),t._v("环境变量标识的文件描述符 (fd) 与父进程通信。"),n("code",[t._v("NODE_CHANNEL_FD")])]),t._v(" "),n("p",[t._v("不像"),n("a",{attrs:{href:"http://man7.org/linux/man-pages/man2/fork.2.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("fork(2)")]),n("OutboundLink")],1),t._v("POSIX 系统调用，"),n("code",[t._v("child_process.fork()")]),t._v("不克隆当前进程。")]),t._v(" "),n("p",[n("code",[t._v("shell")]),t._v("中可用的选项不受支持"),n("a",{attrs:{href:"https://nodejs.org/dist/latest-v18.x/docs/api/child_process.html#child_processspawncommand-args-options",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("child_process.spawn()")]),n("OutboundLink")],1),t._v("， "),n("code",[t._v("child_process.fork()")]),t._v("如果设置将被忽略。")]),t._v(" "),n("p",[t._v("如果"),n("code",[t._v("signal")]),t._v("启用该选项，调用"),n("code",[t._v(".abort()")]),t._v("相应的 "),n("code",[t._v("AbortController")]),t._v("类似于调用"),n("code",[t._v(".kill()")]),t._v("子进程，除了传递给回调的错误将是"),n("code",[t._v("AbortError")]),t._v("：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hello from ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1_000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" fork "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" controller "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbortController")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" signal "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" controller"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" child "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" signal "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This will be called with err being an AbortError if the controller aborts")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  controller"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("abort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Stops the child process")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"child-process-spawn"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#child-process-spawn"}},[t._v("#")]),t._v(" child_process.spawn")]),t._v(" "),n("p",[n("code",[t._v("child_process.spawn(command[, args][, options])")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("command")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v("要运行的命令。")]),t._v(" "),n("li",[n("code",[t._v("args")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v("字符串参数列表。")]),t._v(" "),n("li",[n("code",[t._v("options")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",target:"_blank",rel:"noopener noreferrer"}},[t._v("<对象>"),n("OutboundLink")],1),t._v(" "),n("ul",[n("li",[n("code",[t._v("cwd")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("<字符串>"),n("OutboundLink")],1),t._v(" | "),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/url.html#url_the_whatwg_url_api",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),t._v("子进程的当前工作目录。")]),t._v(" "),n("li",[n("code",[t._v("env")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",target:"_blank",rel:"noopener noreferrer"}},[t._v("object"),n("OutboundLink")],1),t._v("环境键值对。"),n("strong",[t._v("默认值：")]),t._v(" "),n("code",[t._v("process.env")]),t._v(" .")]),t._v(" "),n("li",[n("code",[t._v("argv0")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),n("code",[t._v("argv[0]")]),t._v("显式设置发送给子进程的值。"),n("code",[t._v("command")]),t._v("如果未指定，这将设置为。")]),t._v(" "),n("li",[n("code",[t._v("stdio")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"noopener noreferrer"}},[n("array",[n("OutboundLink")],1)],1),t._v(" | "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),t._v("孩子的 stdio 配置（参见 参考资料 "),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_options_stdio",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("options.stdio")]),n("OutboundLink")],1),t._v("）。")]),t._v(" "),n("li",[n("code",[t._v("detached")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1),t._v("准备子进程独立于其父进程运行。具体行为取决于平台，请参阅 参考资料 "),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_options_detached",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("options.detached")]),n("OutboundLink")],1),t._v("）。")]),t._v(" "),n("li",[n("code",[t._v("uid")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v("设置进程的用户身份（参见 参考资料"),n("a",{attrs:{href:"http://man7.org/linux/man-pages/man2/setuid.2.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("setuid(2)")]),n("OutboundLink")],1),t._v("）。")]),t._v(" "),n("li",[n("code",[t._v("gid")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v("设置进程的组标识（请参阅参考资料"),n("a",{attrs:{href:"http://man7.org/linux/man-pages/man2/setgid.2.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("setgid(2)")]),n("OutboundLink")],1),t._v("）。")]),t._v(" "),n("li",[n("code",[t._v("serialization")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v("指定用于在进程之间发送消息的序列化类型。可能的值为"),n("code",[t._v("'json'")]),t._v("和"),n("code",[t._v("'advanced'")]),t._v("。有关详细信息，请参阅"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_advanced_serialization",target:"_blank",rel:"noopener noreferrer"}},[t._v("高级序列化。"),n("OutboundLink")],1),n("strong",[t._v("默认值：")]),t._v(" "),n("code",[t._v("'json'")]),t._v(" .")]),t._v(" "),n("li",[n("code",[t._v("shell")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("<布尔>"),n("OutboundLink")],1),t._v(" | "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("string"),n("OutboundLink")],1),t._v("如果"),n("code",[t._v("true")]),t._v("，则"),n("code",[t._v("command")]),t._v("在 shell 内部运行。"),n("code",[t._v("'/bin/sh'")]),t._v("在 Unix 和"),n("code",[t._v("process.env.ComSpec")]),t._v("Windows 上使用 。可以将不同的 shell 指定为字符串。请参阅"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_shell_requirements",target:"_blank",rel:"noopener noreferrer"}},[t._v("Shell 要求"),n("OutboundLink")],1),t._v("和 "),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_default_windows_shell",target:"_blank",rel:"noopener noreferrer"}},[t._v("默认 Windows shell"),n("OutboundLink")],1),t._v("。"),n("strong",[t._v("默认值：（")]),t._v(" "),n("code",[t._v("false")]),t._v("无外壳）。")]),t._v(" "),n("li",[n("code",[t._v("windowsVerbatimArguments")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1),t._v("在 Windows 上没有引用或转义参数。在 Unix 上忽略。当被指定并且是 CMD时，这被设置为"),n("code",[t._v("true")]),t._v("自动。"),n("strong",[t._v("默认值：")]),t._v(" ."),n("code",[t._v("shell")]),t._v(" "),n("code",[t._v("false")])]),t._v(" "),n("li",[n("code",[t._v("windowsHide")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1),t._v("隐藏通常在 Windows 系统上创建的子进程控制台窗口。"),n("strong",[t._v("默认值：")]),t._v(" "),n("code",[t._v("false")]),t._v(" .")]),t._v(" "),n("li",[n("code",[t._v("signal")]),t._v(" "),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/globals.html#globals_class_abortsignal",target:"_blank",rel:"noopener noreferrer"}},[t._v("abortsignal)"),n("OutboundLink")],1),t._v("允许使用 AbortSignal 中止子进程。")]),t._v(" "),n("li",[n("code",[t._v("timeout")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),t._v("允许进程运行的最长时间，以毫秒为单位。"),n("strong",[t._v("默认值：")]),t._v(" "),n("code",[t._v("undefined")]),t._v(" .")]),t._v(" "),n("li",[n("code",[t._v("killSignal")]),t._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",target:"_blank",rel:"noopener noreferrer"}},[t._v("<字符串>"),n("OutboundLink")],1),t._v(" | "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1),t._v("当派生进程将被超时或中止信号终止时使用的信号值。"),n("strong",[t._v("默认值：")]),t._v(" "),n("code",[t._v("'SIGTERM'")]),t._v(" .")])])]),t._v(" "),n("li",[t._v("返回："),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_class_childprocess",target:"_blank",rel:"noopener noreferrer"}},[t._v("<子进程>"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("该"),n("code",[t._v("child_process.spawn()")]),t._v("方法使用给定的生成一个新进程 "),n("code",[t._v("command")]),t._v("，命令行参数在"),n("code",[t._v("args")]),t._v(". 如果省略，"),n("code",[t._v("args")]),t._v("则默认为空数组。")]),t._v(" "),n("p",[n("strong",[t._v("如果"),n("code",[t._v("shell")]),t._v("启用该选项，请不要将未经过滤的用户输入传递给此函数。任何包含 shell 元字符的输入都可用于触发任意命令执行。")])]),t._v(" "),n("p",[t._v("第三个参数可用于指定其他选项，具有以下默认值：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" defaults "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  cwd"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  env"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("用于"),n("code",[t._v("cwd")]),t._v("指定生成进程的工作目录。如果没有给出，默认是继承当前工作目录。如果给定，但路径不存在，子进程会发出错误"),n("code",[t._v("ENOENT")]),t._v("并立即退出。"),n("code",[t._v("ENOENT")]),t._v("当命令不存在时也会发出。")]),t._v(" "),n("p",[t._v("用于"),n("code",[t._v("env")]),t._v("指定对新进程可见的环境变量，默认为"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/process.html#process_process_env",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("process.env")]),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("p",[n("code",[t._v("undefined")]),t._v("中的值"),n("code",[t._v("env")]),t._v("将被忽略。")]),t._v(" "),n("p",[t._v("运行"),n("code",[t._v("ls -lh /usr")]),t._v("、捕获"),n("code",[t._v("stdout")]),t._v("、"),n("code",[t._v("stderr")]),t._v("和退出代码的示例：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" spawn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ls "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ls'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-lh'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/usr'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("stdout: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stderr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("stderr: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'close'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("code")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("child process exited with code ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("code"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("例子：一个非常复杂的运行方式"),n("code",[t._v("ps ax | grep ssh")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" spawn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ps'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ax'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" grep "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'grep'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ssh'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  grep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stderr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("ps stderr: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'close'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("code")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("ps process exited with code ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("code"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  grep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ngrep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ngrep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stderr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("grep stderr: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ngrep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'close'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("code")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("grep process exited with code ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("code"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("检查失败的示例"),n("code",[t._v("spawn")]),t._v("：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" spawn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" subprocess "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bad_command'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nsubprocess"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Failed to start subprocess.'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("某些平台（macOS、Linux）将使用 的值"),n("code",[t._v("argv[0]")]),t._v("作为进程标题，而其他平台（Windows、SunOS）将使用"),n("code",[t._v("command")]),t._v(".")]),t._v(" "),n("p",[t._v("Node.js 当前会在启动时覆盖"),n("code",[t._v("argv[0]")]),t._v("，"),n("code",[t._v("process.execPath")]),t._v("因此 "),n("code",[t._v("process.argv[0]")]),t._v("在 Node.js 子进程中不会匹配从父 进程"),n("code",[t._v("argv0")]),t._v(" 传递给的参数，而是使用属性检索它。"),n("code",[t._v("spawn``process.argv0")])]),t._v(" "),n("p",[t._v("如果"),n("code",[t._v("signal")]),t._v("启用该选项，调用"),n("code",[t._v(".abort()")]),t._v("相应的 "),n("code",[t._v("AbortController")]),t._v("类似于调用"),n("code",[t._v(".kill()")]),t._v("子进程，除了传递给回调的错误将是"),n("code",[t._v("AbortError")]),t._v("：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" spawn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" controller "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbortController")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" signal "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" controller"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" grep "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'grep'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ssh'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" signal "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ngrep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This will be called with err being an AbortError if the controller aborts")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncontroller"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("abort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Stops the child process")]),t._v("\n")])])]),n("h5",{attrs:{id:"options-detached"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#options-detached"}},[t._v("#")]),t._v(" "),n("code",[t._v("options.detached")])]),t._v(" "),n("p",[t._v("在 Windows 上，设置"),n("code",[t._v("options.detached")]),t._v("为"),n("code",[t._v("true")]),t._v("可以让子进程在父进程退出后继续运行。孩子将有自己的控制台窗口。一旦为子进程启用，它就不能被禁用。")]),t._v(" "),n("p",[t._v("在非 Windows 平台上，如果"),n("code",[t._v("options.detached")]),t._v("设置为"),n("code",[t._v("true")]),t._v("，子进程将成为新进程组和会话的领导者。子进程可以在父进程退出后继续运行，无论它们是否分离。"),n("a",{attrs:{href:"http://man7.org/linux/man-pages/man2/setsid.2.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("setsid(2)")]),n("OutboundLink")],1),t._v("有关详细信息，请参阅。")]),t._v(" "),n("p",[t._v("默认情况下，父母将等待分离的孩子退出。要防止父级等待给定"),n("code",[t._v("subprocess")]),t._v("退出，请使用该 "),n("code",[t._v("subprocess.unref()")]),t._v("方法。这样做会导致父事件循环不将子事件包括在其引用计数中，允许父事件独立于子事件退出，除非在子事件和父事件之间建立了 IPC 通道。")]),t._v(" "),n("p",[t._v("当使用该"),n("code",[t._v("detached")]),t._v("选项启动一个长时间运行的进程时，该进程将不会在父进程退出后继续在后台运行，除非为其提供"),n("code",[t._v("stdio")]),t._v("不连接到父进程的配置。如果父母的"),n("code",[t._v("stdio")]),t._v("是继承的，孩子将继续依附于控制终端。")]),t._v(" "),n("p",[t._v("一个长时间运行的进程的示例，通过分离并忽略其父 "),n("code",[t._v("stdio")]),t._v("文件描述符，以忽略父进程的终止：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" spawn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" subprocess "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_program.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  detached"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  stdio"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ignore'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nsubprocess"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unref")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("或者，可以将子进程的输出重定向到文件中：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" spawn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" out "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("openSync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./out.log'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("openSync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./out.log'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" subprocess "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prg'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  detached"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  stdio"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ignore'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nsubprocess"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unref")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h5",{attrs:{id:"options-stdio"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#options-stdio"}},[t._v("#")]),t._v(" "),n("code",[t._v("options.stdio")])]),t._v(" "),n("p",[t._v("该"),n("code",[t._v("options.stdio")]),t._v("选项用于配置在父进程和子进程之间建立的管道。默认情况下，孩子的 stdin、stdout 和 stderr 被重定向到对象上相应的"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_subprocess_stdin",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("subprocess.stdin")]),n("OutboundLink")],1),t._v("、 "),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_subprocess_stdout",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("subprocess.stdout")]),n("OutboundLink")],1),t._v("和"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_subprocess_stderr",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("subprocess.stderr")]),n("OutboundLink")],1),t._v("流 "),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_class_childprocess",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("ChildProcess")]),n("OutboundLink")],1),t._v("。这相当于设置"),n("code",[t._v("options.stdio")]),t._v(" 等于"),n("code",[t._v("['pipe', 'pipe', 'pipe']")]),t._v("。")]),t._v(" "),n("p",[t._v("为方便起见，"),n("code",[t._v("options.stdio")]),t._v("可以是以下字符串之一：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("'pipe'")]),t._v(": 相当于"),n("code",[t._v("['pipe', 'pipe', 'pipe']")]),t._v("（默认）")]),t._v(" "),n("li",[n("code",[t._v("'overlapped'")]),t._v("： 相当于"),n("code",[t._v("['overlapped', 'overlapped', 'overlapped']")])]),t._v(" "),n("li",[n("code",[t._v("'ignore'")]),t._v("： 相当于"),n("code",[t._v("['ignore', 'ignore', 'ignore']")])]),t._v(" "),n("li",[n("code",[t._v("'inherit'")]),t._v(": 相当于"),n("code",[t._v("['inherit', 'inherit', 'inherit']")]),t._v("或"),n("code",[t._v("[0, 1, 2]")])])]),t._v(" "),n("p",[t._v("否则，的值"),n("code",[t._v("options.stdio")]),t._v("是一个数组，其中每个索引对应于孩子中的一个 fd。fds 0、1 和 2 分别对应于 stdin、stdout 和 stderr。可以指定额外的 fds 以在父子之间创建额外的管道。该值为以下之一：")]),t._v(" "),n("ol",[n("li",[n("p",[n("code",[t._v("'pipe'")]),t._v("：在子进程和父进程之间创建管道。管道的父端作为对象的属性公开给父 "),n("code",[t._v("child_process")]),t._v("级"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_subprocess_stdio",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("subprocess.stdio[fd\\]")]),n("OutboundLink")],1),t._v("。为 fds 0、1 和 2 创建的管道也可分别用作"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_subprocess_stdin",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("subprocess.stdin")]),n("OutboundLink")],1),t._v("、 "),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_subprocess_stdout",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("subprocess.stdout")]),n("OutboundLink")],1),t._v("和"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_subprocess_stderr",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("subprocess.stderr")]),n("OutboundLink")],1),t._v("。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("'overlapped'``'pipe'")]),t._v(":除了在"),n("code",[t._v("FILE_FLAG_OVERLAPPED")]),t._v("句柄上设置标志外，其他相同。这对于子进程的 stdio 句柄上的重叠 I/O 是必需的。 有关详细信息，请参阅 "),n("a",{attrs:{href:"https://docs.microsoft.com/en-us/windows/win32/fileio/synchronous-and-asynchronous-i-o",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档。"),n("OutboundLink")],1),n("code",[t._v("'pipe'")]),t._v("这与非 Windows 系统完全相同。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("'ipc'")]),t._v("：创建一个 IPC 通道，用于在父子之间传递消息/文件描述符。A"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_class_childprocess",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("ChildProcess")]),n("OutboundLink")],1),t._v("最多可以有一个 IPC stdio 文件描述符。设置此选项可启用该 "),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_subprocess_send_message_sendhandle_options_callback",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("subprocess.send()")]),n("OutboundLink")],1),t._v("方法。如果子进程是 Node.js 进程，IPC 通道的存在将启用"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/process.html#process_process_send_message_sendhandle_options_callback",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("process.send()")]),n("OutboundLink")],1),t._v("和 "),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/process.html#process_process_disconnect",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("process.disconnect()")]),n("OutboundLink")],1),t._v("方法，以及子进程中的事件"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/process.html#process_event_disconnect",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'disconnect'")]),n("OutboundLink")],1),t._v("。 "),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/process.html#process_event_message",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'message'")]),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/process.html#process_process_send_message_sendhandle_options_callback",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("process.send()")]),n("OutboundLink")],1),t._v(" 不支持以任何方式访问 IPC 通道 fd或将 IPC 通道与非 Node.js 实例的子进程一起使用。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("'ignore'")]),t._v(": 指示 Node.js 忽略子节点中的 fd。虽然 Node.js 将始终为其生成的进程打开 fds 0、1 和 2，但将 fd 设置为"),n("code",[t._v("'ignore'")]),t._v("将导致 Node.js 打开"),n("code",[t._v("/dev/null")]),t._v("并将其附加到子进程的 fd。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("'inherit'")]),t._v(": 通过相应的 stdio 流传入/传出父进程。在前三个位置，这分别相当于 "),n("code",[t._v("process.stdin")]),t._v("、"),n("code",[t._v("process.stdout")]),t._v("、 和"),n("code",[t._v("process.stderr")]),t._v("。在任何其他位置，等同于"),n("code",[t._v("'ignore'")]),t._v(".")])]),t._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/stream.html#stream_stream",target:"_blank",rel:"noopener noreferrer"}},[t._v("stream"),n("OutboundLink")],1),t._v("对象：与子进程共享引用 tty、文件、套接字或管道的可读或可写流。流的底层文件描述符在子进程中被复制到与数组中的索引对应的 fd "),n("code",[t._v("stdio")]),t._v("。"),n("code",[t._v("'open'")]),t._v("流必须有一个底层描述符（文件流在事件发生之前没有）。")])]),t._v(" "),n("li",[n("p",[t._v("正整数：整数值被解释为当前在父进程中打开的文件描述符。它与子进程共享，类似于共享"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/stream.html#stream_stream",target:"_blank",rel:"noopener noreferrer"}},[t._v("对象的方式。"),n("OutboundLink")],1),t._v("Windows 不支持传递套接字。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("null")]),t._v(", "),n("code",[t._v("undefined")]),t._v(": 使用默认值。对于 stdio fds 0、1 和 2（换句话说，stdin、stdout 和 stderr），创建了一个管道。对于 fd 3 及更高版本，默认值为"),n("code",[t._v("'ignore'")]),t._v(".")])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" spawn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Child will use parent's stdios.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prg'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" stdio"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'inherit'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Spawn child sharing only stderr.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prg'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" stdio"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pipe'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pipe'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stderr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Open an extra fd=4, to interact with programs presenting a")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// startd-style interface.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prg'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" stdio"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pipe'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pipe'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("em",[t._v("值得注意的是，当父子进程之间建立了IPC通道，并且子进程是Node.js进程时，子进程在未引用IPC通道的情况下启动（使用），直到子进程为事件注册事件"),n("code",[t._v("unref()")]),t._v("处理"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/process.html#process_event_disconnect",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'disconnect'")]),n("OutboundLink")],1),t._v("程序或"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/process.html#process_event_message",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("'message'")]),n("OutboundLink")],1),t._v("事件。这允许子进程正常退出，而进程不会被打开的 IPC 通道保持打开状态。")])]),t._v(" "),n("p",[t._v("在类 Unix 操作系统上，该"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_child_process_spawn_command_args_options",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("child_process.spawn()")]),n("OutboundLink")],1),t._v("方法在将事件循环与子进程解耦之前同步执行内存操作。具有大量内存占用的应用程序可能会发现频繁 "),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_child_process_spawn_command_args_options",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("child_process.spawn()")]),n("OutboundLink")],1),t._v("调用成为瓶颈。有关详细信息，请参阅"),n("a",{attrs:{href:"https://bugs.chromium.org/p/v8/issues/detail?id=7381",target:"_blank",rel:"noopener noreferrer"}},[t._v("V8 问题 7381"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("p",[t._v("另见："),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_child_process_exec_command_options_callback",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("child_process.exec()")]),n("OutboundLink")],1),t._v("和"),n("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_child_process_fork_modulepath_args_options",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("child_process.fork()")]),n("OutboundLink")],1),t._v("。")])])}),[],!1,null,null,null);s.default=e.exports}}]);