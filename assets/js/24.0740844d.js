(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{566:function(a,t,s){"use strict";s.r(t);var e=s(17),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"phaser-基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#phaser-基础"}},[a._v("#")]),a._v(" Phaser 基础")]),a._v(" "),s("p",[s("a",{attrs:{href:"http://phaser.io/docs/2.6.2/index",target:"_blank",rel:"noopener noreferrer"}},[a._v("phaser2 官方文档"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("phaser2 示例教程")]),a._v(" "),s("p",[s("a",{attrs:{href:"http://phaser.io/tutorials/making-your-first-phaser-2-game",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://phaser.io/tutorials/making-your-first-phaser-2-game"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("phaser3 示例教程")]),a._v(" "),s("p",[s("a",{attrs:{href:"http://phaser.io/tutorials/making-your-first-phaser-3-game-chinese",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://phaser.io/tutorials/making-your-first-phaser-3-game-chinese"),s("OutboundLink")],1)]),a._v(" "),s("hr"),a._v(" "),s("h2",{attrs:{id:"game"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#game"}},[a._v("#")]),a._v(" Game")]),a._v(" "),s("p",[a._v("构造函数")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Game")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("width"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" renderer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" transparent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" antialias"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" physicsConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("参数")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("width 【number | string】可选参数，默认 800")]),a._v(" "),s("ul",[s("li",[a._v("以游戏像素为单位的游戏宽度。如果以字符串形式给出，该值必须在 0 到 100 之间，并将用作父容器的百分比宽度，如果没有给出父容器，则用作浏览器窗口。")])])]),a._v(" "),s("li",[s("p",[a._v("height 【number | string】可选参数，默认 600")]),a._v(" "),s("ul",[s("li",[a._v("以游戏像素为单位的游戏高度。如果以字符串形式给出，则该值必须介于 0 和 100 之间，并且将用作父容器或浏览器窗口（如果未给出父容器）的百分比高度。")])])]),a._v(" "),s("li",[s("p",[a._v("renderer 【number】 可选参数，默认 "),s("strong",[a._v("Phaser.AUTO")])]),a._v(" "),s("ul",[s("li",[a._v("使用哪个渲染器：Phaser.AUTO 将自动检测、Phaser.WEBGL、Phaser.CANVAS 或 Phaser.HEADLESS（根本不渲染）。")])])]),a._v(" "),s("li",[s("p",[a._v("parent 【string | HTMLElement】 可选参数，默认 “”")]),a._v(" "),s("ul",[s("li",[a._v("这个游戏画布将被注入的 DOM 元素。DOM ID（字符串）或元素本身。")])])]),a._v(" "),s("li",[s("p",[a._v("state 【object】 可选参数，默认 null")]),a._v(" "),s("ul",[s("li",[a._v("默认状态对象。由 Phaser.State 函数（预加载、创建、更新、渲染）或 null 组成的对象。")])])]),a._v(" "),s("li",[s("p",[a._v("transparent 【boolean】可选参数，默认 false")]),a._v(" "),s("ul",[s("li",[a._v("是否使用透明画布背景。")])])]),a._v(" "),s("li",[s("p",[a._v("antialias 【boolean】可选参数，默认 true")]),a._v(" "),s("ul",[s("li",[a._v("绘制所有图像纹理抗锯齿或不抗锯齿。默认是平滑纹理，但如果您的游戏具有像素艺术，则禁用。")])])]),a._v(" "),s("li",[s("p",[a._v("physicsConfig 【object】可选参数，默认 null")]),a._v(" "),s("ul",[s("li",[a._v("在创建时传递给物理世界的物理配置对象。")])])])])]),a._v(" "),s("h3",{attrs:{id:"属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),s("h4",{attrs:{id:"add"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[a._v("#")]),a._v(" add")]),a._v(" "),s("p",[a._v("游戏对象工厂GameObjectFactory 的引用。")]),a._v(" "),s("h4",{attrs:{id:"state"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#state"}},[a._v("#")]),a._v(" state")]),a._v(" "),s("p",[a._v("游戏状态管理对象StateManager的引用")]),a._v(" "),s("h4",{attrs:{id:"load"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#load"}},[a._v("#")]),a._v(" load")]),a._v(" "),s("p",[a._v("游戏资源加载模块Loader的引用")]),a._v(" "),s("h4",{attrs:{id:"paused"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#paused"}},[a._v("#")]),a._v(" paused")]),a._v(" "),s("p",[a._v("游戏暂停状态\ntrue 表示暂停")]),a._v(" "),s("blockquote",[s("p",[a._v("game.paused = false")])]),a._v(" "),s("h4",{attrs:{id:"camera"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#camera"}},[a._v("#")]),a._v(" camera")]),a._v(" "),s("p",[a._v("相机 - 游戏视角")]),a._v(" "),s("h4",{attrs:{id:"input"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#input"}},[a._v("#")]),a._v(" input")]),a._v(" "),s("p",[a._v("游戏中的用户交互事件的引用")]),a._v(" "),s("h4",{attrs:{id:"scale"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scale"}},[a._v("#")]),a._v(" scale")]),a._v(" "),s("p",[a._v("游戏缩放模块的引用")]),a._v(" "),s("h4",{attrs:{id:"sound"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sound"}},[a._v("#")]),a._v(" sound")]),a._v(" "),s("h4",{attrs:{id:"stage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stage"}},[a._v("#")]),a._v(" stage")]),a._v(" "),s("p",[a._v("游戏舞台")]),a._v(" "),s("h4",{attrs:{id:"world"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#world"}},[a._v("#")]),a._v(" world")]),a._v(" "),s("p",[a._v("游戏世界的引用")]),a._v(" "),s("h4",{attrs:{id:"particles"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#particles"}},[a._v("#")]),a._v(" particles")]),a._v(" "),s("p",[a._v("游戏粒子系统的引用")]),a._v(" "),s("h4",{attrs:{id:"physics"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#physics"}},[a._v("#")]),a._v(" physics")]),a._v(" "),s("p",[a._v("游戏物理引擎的引用")]),a._v(" "),s("h3",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[a._v("#")]),a._v(" 方法")]),a._v(" "),s("h3",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[a._v("#")]),a._v(" 示例")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" game "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Phaser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Game")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("480")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("320")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" Phaser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("AUTO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    preload"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" preload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    create"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" create"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    update"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("hr"),a._v(" "),s("h2",{attrs:{id:"gameobjectfactory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gameobjectfactory"}},[a._v("#")]),a._v(" GameObjectFactory")]),a._v(" "),s("p",[a._v("游戏对象工厂")]),a._v(" "),s("p",[a._v("一个辅助类，可以创建任何 Phaser 游戏对象并将它们添加到游戏世界。")]),a._v(" "),s("p",[a._v("GameObjectFactory 是创建许多常见游戏对象的快速方法")]),a._v(" "),s("p",[a._v("使用 game.add")]),a._v(" "),s("p",[a._v("创建的对象将自动添加到相应的管理器、世界或手动指定的父组。")]),a._v(" "),s("p",[a._v("构造函数")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("GameObjectFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("game.add 引用此对象")]),a._v(" "),s("h3",{attrs:{id:"属性-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性-2"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),s("h4",{attrs:{id:"game-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#game-2"}},[a._v("#")]),a._v(" game")]),a._v(" "),s("h4",{attrs:{id:"world-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#world-2"}},[a._v("#")]),a._v(" world")]),a._v(" "),s("h3",{attrs:{id:"方法-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-2"}},[a._v("#")]),a._v(" 方法")]),a._v(" "),s("h4",{attrs:{id:"sprite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sprite"}},[a._v("#")]),a._v(" sprite()")]),a._v(" "),s("p",[a._v("创建一个具有特定位置和精灵表键的新精灵。")]),a._v(" "),s("p",[a._v("最基本的是，Sprite 由一组坐标和一个纹理组成，在渲染时使用。\n它们还包含额外的属性，允许物理运动（通过 Sprite.body）、输入处理（通过 Sprite.input）。\n事件（通过 Sprite.events），动画（通过 Sprite.animations），相机捕捉等等。请看使用案例的例子。")]),a._v(" "),s("p",[a._v("sprite(x, y, key, frame, group) → {"),s("a",{attrs:{href:"http://phaser.io/docs/2.6.2/Phaser.Sprite.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Phaser.Sprite"),s("OutboundLink")],1),a._v("}")]),a._v(" "),s("blockquote",[s("p",[a._v("参数")]),a._v(" "),s("ul",[s("li",[a._v("x 【number】可选参数，默认 0\n"),s("ul",[s("li",[a._v("该精灵的 X 坐标。该坐标是相对于该精灵可能所在的任何父容器而言的")])])]),a._v(" "),s("li",[a._v("y 【number】可选参数，默认 0\n"),s("ul",[s("li",[a._v("该精灵的 Y 坐标。该坐标是相对于这个精灵可能在的任何父容器而言的")])])]),a._v(" "),s("li",[a._v("key 【string | "),s("a",{attrs:{href:"http://phaser.io/docs/2.6.2/Phaser.RenderTexture.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Phaser.RenderTexture"),s("OutboundLink")],1),a._v(" | "),s("a",{attrs:{href:"http://phaser.io/docs/2.6.2/Phaser.BitmapData.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Phaser.BitmapData"),s("OutboundLink")],1),a._v(" | "),s("a",{attrs:{href:"http://phaser.io/docs/2.6.2/Phaser.Video.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Phaser.Video"),s("OutboundLink")],1),a._v(" | "),s("a",{attrs:{href:"http://phaser.io/docs/2.6.2/PIXI.Texture.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("PIXI.Texture"),s("OutboundLink")],1),a._v("】可选参数\n"),s("ul",[s("li",[a._v("该显示对象在渲染过程中作为纹理使用的图像。如果是一个字符串，Phaser 将在图像缓存中获取一个条目。或者它可以是 RenderTexture、BitmapData、Video 或 PIXI.Texture 的实例。")])])]),a._v(" "),s("li",[a._v("frame 【string | number】可选参数\n"),s("ul",[s("li",[a._v("如果使用 Texture Atlas 或 Sprite Sheet，这允许你指定要使用的帧。使用一个整数作为框架 ID，或者使用一个字符串作为框架名称。")])])]),a._v(" "),s("li",[a._v("group 【"),s("a",{attrs:{href:"http://phaser.io/docs/2.6.2/Phaser.Group.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Phaser.Group"),s("OutboundLink")],1),a._v("】可选参数\n"),s("ul",[s("li",[a._v("用于添加对象的可选组。如果不指定，它将被添加到世界组")])])])])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 这将添加球到游戏，并将其呈现在屏幕上。前两个参数是要添加的画布的 x 和 y 坐标，第三个是我们之前定义的资产的名称。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// ball = game.add.sprite(50, 50, "ball");')]),a._v("\nball "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sprite")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("world"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("width "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("world"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("height "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("35")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ball"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nball"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("anchor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h4",{attrs:{id:"existing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#existing"}},[a._v("#")]),a._v(" existing()")]),a._v(" "),s("p",[a._v("将现有显示对象添加到游戏世界。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("existing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" → "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h4",{attrs:{id:"image"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#image"}},[a._v("#")]),a._v(" image()")]),a._v(" "),s("p",[a._v("创建一个新的图像对象。 图像是一种轻量级对象，可用于显示不需要物理或动画的任何内容。 它仍然可以旋转、缩放、裁剪和接收输入事件。 这使得它非常适合徽标、背景、简单按钮和其他非 Sprite 图形。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" frame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("参数")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("x 【number】默认 0")]),a._v(" "),s("ul",[s("li",[a._v("图像的 x 坐标。该坐标是相对于此图像可能位于的任何父容器的。")])])]),a._v(" "),s("li",[s("p",[a._v("y 【number】默认 0")]),a._v(" "),s("ul",[s("li",[a._v("图像的 y 坐标。该坐标是相对于此图像可能位于的任何父容器的。")])])]),a._v(" "),s("li",[s("p",[a._v("key 【string | Phaser.RenderTexture | Phaser.BitmapData | Phaser.Video | PIXI.Texture】可选参数")]),a._v(" "),s("ul",[s("li",[a._v("渲染期间此显示对象用作纹理的图像。如果字符串 Phaser 将在图像缓存中获取一个条目。或者它可以是 RenderTexture、BitmapData、Video 或 PIXI.Texture 的实例。")])])]),a._v(" "),s("li",[s("p",[a._v("frame 【string | number】可选参数")]),a._v(" "),s("ul",[s("li",[a._v("如果使用 Texture Atlas 或 Sprite Sheet，这允许您指定要使用的帧。使用整数作为帧 ID，或使用字符串作为帧名称。")])])]),a._v(" "),s("li",[s("p",[a._v("group 【Phaser.Group】可选参数")]),a._v(" "),s("ul",[s("li",[a._v("要将对象添加到的可选组。如果未指定，它将被添加到 World 组中。")])])])])]),a._v(" "),s("h2",{attrs:{id:"loader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loader"}},[a._v("#")]),a._v(" Loader")]),a._v(" "),s("p",[a._v("加载器")]),a._v(" "),s("p",[a._v("Loader 负责加载所有外部内容，例如图像、声音、纹理图集和数据文件。 加载器结合使用标签加载（例如图像元素）和 XHR，并提供进度和完成回调。")]),a._v(" "),s("p",[a._v("构造函数")]),a._v(" "),s("h3",{attrs:{id:"属性-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性-3"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),s("h3",{attrs:{id:"方法-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-3"}},[a._v("#")]),a._v(" 方法")]),a._v(" "),s("h4",{attrs:{id:"image-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#image-2"}},[a._v("#")]),a._v(" image()")]),a._v(" "),s("p",[s("strong",[a._v("game.loader.image()")])]),a._v(" "),s("p",[a._v("将图像添加到当前加载队列。调用此方法后不会立即加载文件。当加载程序启动时，文件被添加到准备加载的队列中。")]),a._v(" "),s("p",[a._v("Phaser 可以加载所有常见的图像类型：png、jpg、gif 和浏览器可以本地处理的任何其他格式。")]),a._v(" "),s("p",[a._v("键必须是唯一的字符串。它用于在成功加载后将文件添加到 Phaser.Cache。")]),a._v(" "),s("p",[a._v("通过 Cache.getImage(key) 检索图像，URL 可以是相对的或绝对的。")]),a._v(" "),s("p",[a._v("如果 URL 是相对的，则 Loader.baseURL 和 Loader.path 值将被添加到它的前面。")]),a._v(" "),s("p",[a._v("如果未指定 URL，加载程序将获取密钥并从中创建一个文件名。")]),a._v(" "),s("p",[a._v("例如，如果键是“alien”并且没有给出 URL，则加载程序会将 URL 设置为“alien.png”。它将始终添加.png 为扩展名。如果您不希望执行此操作，请提供一个 URL。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" overwrite"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("参数")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("key 【string】")]),a._v(" "),s("ul",[s("li",[a._v("此图像文件的唯一资产密钥")])])]),a._v(" "),s("li",[s("p",[a._v("url 【string】可选参数")]),a._v(" "),s("ul",[s("li",[a._v('图像文件的 URL。如果未定义或 null，则 url 将设置为 <key>.png”，即如果 "key" 为 "alien"，则该 url 将为 "alien.png"')])])]),a._v(" "),s("li",[s("p",[a._v("overwrite 【boolean】可选参数 默认 false")]),a._v(" "),s("ul",[s("li",[a._v("如果队列中已存在具有匹配键的卸载文件，则此条目将覆盖它。")])])])])]),a._v(" "),s("h4",{attrs:{id:"audio"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#audio"}},[a._v("#")]),a._v(" audio()")]),a._v(" "),s("p",[s("strong",[a._v("game.loader.audio()")])]),a._v(" "),s("hr"),a._v(" "),s("h2",{attrs:{id:"sprite-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sprite-2"}},[a._v("#")]),a._v(" Sprite")]),a._v(" "),s("p",[a._v("http://phaser.io/docs/2.6.2/Phaser.Sprite.html")]),a._v(" "),s("p",[a._v("一个有纹理的游戏对象，能够运行动画、输入事件和物理学。")]),a._v(" "),s("p",[a._v("精灵是游戏的命脉，几乎用于所有视觉效果。 最基本的 Sprite 由一组坐标和渲染到画布的纹理组成。 它们还包含允许物理运动（通过 Sprite.body）、输入处理（通过 Sprite.input）、 事件（通过 Sprite.events）、动画（通过 Sprite.animations）、相机剔除等。")]),a._v(" "),s("p",[a._v("构造函数")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Sprite")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" frame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("参数")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("game 【Phaser.Game】")]),a._v(" "),s("ul",[s("li",[a._v("对当前正在运行的游戏的引用。")])])]),a._v(" "),s("li",[s("p",[a._v("x 【number】")]),a._v(" "),s("ul",[s("li",[a._v("放置 Sprite 的 x 坐标（在世界空间中）")])])]),a._v(" "),s("li",[s("p",[a._v("y 【number】")]),a._v(" "),s("ul",[s("li",[a._v("放置 Sprite 的 y 坐标（在世界空间中）")])])]),a._v(" "),s("li",[s("p",[a._v("key 【string | Phaser.RenderTexture | Phaser.BitmapData | PIXI.Texture】")]),a._v(" "),s("ul",[s("li",[a._v("这是 Sprite 在渲染过程中使用的图像或纹理。它可以是一个字符串，它是对缓存条目的引用，或者是 RenderTexture 或 PIXI.Texture 的实例。")])])]),a._v(" "),s("li",[s("p",[a._v("frame 【string | number】")]),a._v(" "),s("ul",[s("li",[a._v("如果此 Sprite 使用的是 Sprite 表或纹理图集的一部分，您可以通过提供字符串或数字索引来指定要使用的确切帧。")])])])])]),a._v(" "),s("h3",{attrs:{id:"属性-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性-4"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),s("h4",{attrs:{id:"alive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#alive"}},[a._v("#")]),a._v(" alive")]),a._v(" "),s("p",[a._v("一个有用的标志，用来控制游戏对象是活着还是死了。")]),a._v(" "),s("p",[a._v("如果对象的生命值耗尽，健康组件的伤害方法会自动设置这个标志。或者你可以通过你的游戏代码来切换它。")]),a._v(" "),s("p",[a._v("这个属性主要是提供给你的游戏使用的--它并不影响渲染或逻辑更新。然而，你可以使用 Group.getFirstAlive 与这个属性结合起来，以实现快速的对象池和回收。")]),a._v(" "),s("h4",{attrs:{id:"anchor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#anchor"}},[a._v("#")]),a._v(" anchor")]),a._v(" "),s("p",[a._v("锚点设置纹理的原点。是一个 Point 对象 。")]),a._v(" "),s("p",[a._v("默认值为 （0, 0），这意味着纹理的原点位于左上角。将锚点设置为 （0.5, 0.5） 表示纹理原点居中，将锚点设置为 （1, 1） 将意味着纹理原点将位于右下角")]),a._v(" "),s("h4",{attrs:{id:"body"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#body"}},[a._v("#")]),a._v(" body")]),a._v(" "),s("p",[a._v("body 是游戏对象的物理体。一旦一个游戏对象被启用为物理学，你就可以通过它访问所有相关的属性和方法。")]),a._v(" "),s("p",[a._v("默认情况下，游戏对象不会将自己添加到任何物理系统中，其主体属性将为空。")]),a._v(" "),s("p",[a._v("要为物理学启用这个游戏对象，你需要调用 game.physics.enable(object, system) 其中 object 是这个对象\n和系统是你正在使用的物理系统。如果没有给出，它默认为 Phaser.Physics.Arcade。")]),a._v(" "),s("p",[a._v("你也可以调用 "),s("strong",[a._v("game.physics.arcade.enable(object)")]),a._v("，或者将这个游戏对象添加到一个启用物理的组中。")]),a._v(" "),s("p",[a._v("重要提示：为 P2 或 Ninja 物理学启用一个游戏对象会自动将其锚点属性设置为 0.5。\n所以物理体在游戏对象上是居中的。")]),a._v(" "),s("p",[a._v("如果你需要一个不同的结果，那就手动调整或重新创建主体形状的偏移，或者在启用物理学后重置锚点。")]),a._v(" "),s("p",[s("strong",[a._v("sprite.body 的属性")])]),a._v(" "),s("blockquote",[s("ul",[s("li",[s("p",[s("strong",[a._v("acceleration")])]),a._v(" "),s("p",[a._v("加速度是速度的变化率。以每秒平方的像素来衡量。")])])]),a._v(" "),s("ul",[s("li",[s("p",[s("strong",[a._v("allowGravity")])]),a._v(" "),s("p",[a._v("允许本体受到重力的影响？无论是世界还是本地。")])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("allowRotation")])]),a._v(" "),s("p",[a._v("允许这个身体被旋转吗？(通过角度速度等)")])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("angle")])]),a._v(" "),s("p",[a._v("[readonly] angle : number")]),a._v(" "),s("p",[a._v("体的速度角度，单位为弧度。")])]),a._v(" "),s("li",[s("p",[s("strong",[s("span",{staticStyle:{color:"red"}},[a._v("bounce")])])]),a._v(" "),s("p",[a._v("碰撞反弹。bounce.x/y=1 意味着完全反弹，bounce.x/y=0.5 意味着 50%的反弹速度。")])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("checkCollision")])]),a._v(" "),s("p",[a._v("设置 checkCollision 属性来控制这个车身的碰撞处理方向。\n例如，checkCollision.up = false 意味着当碰撞发生在向上移动时，它不会发生碰撞。\n如果你需要完全禁用一个 Body，使用 body.enable = false，这也会禁用运动。\n如果你需要只禁用碰撞和/或重叠检查，但保留运动，请设置 checkCollision.none = true。一个包含允许碰撞的对象。")])]),a._v(" "),s("li",[s("p",[s("strong",[s("span",{staticStyle:{color:"red"}},[a._v("collideWorldBounds")])])]),a._v(" "),s("p",[a._v('身体可以被设置为自动碰撞世界边界，如果设置为 "true"，则反弹回世界。否则它将离开世界。身体应该与世界边界相撞吗？')])]),a._v(" "),s("li",[s("p",[s("strong",[s("span",{staticStyle:{color:"red"}},[a._v("drag")])])]),a._v(" "),s("p",[a._v("摩擦力。")])]),a._v(" "),s("li",[s("p",[s("strong",[s("span",{staticStyle:{color:"red"}},[a._v("touching")])])]),a._v(" "),s("p",[a._v("当实体与另一个碰撞时，此对象将填充布尔值。")]),a._v(" "),s("p",[a._v("touch.up=true 表示碰撞发生在该主体的顶部。包含触摸结果的对象。")])]),a._v(" "),s("li",[s("p",[a._v("velocity")]),a._v(" "),s("p",[a._v("速度，或身体的速度变化率。以每秒的像素为单位测量。"),s("a",{attrs:{href:"http://phaser.io/docs/2.6.2/Phaser.Point.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Phaser.Point"),s("OutboundLink")],1)]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 在屏幕上移动球")]),a._v("\nball"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("velocity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("150")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("150")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 球将通过向上移动而不是下降来开始游戏")]),a._v("\nball"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("velocity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("150")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("150")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])])]),a._v(" "),s("li")])]),a._v(" "),s("h4",{attrs:{id:"animations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#animations"}},[a._v("#")]),a._v(" animations")]),a._v(" "),s("p",[a._v("如果游戏对象被启用为动画（比如 Phaser.Sprite），这就是对其 AnimationManager 实例的引用。")]),a._v(" "),s("p",[a._v("通过它，你可以创建、播放、暂停和停止动画。")]),a._v(" "),s("p",[s("strong",[a._v("sprite.body 的方法")])]),a._v(" "),s("blockquote"),a._v(" "),s("h4",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[a._v("#")])]),a._v(" "),s("h3",{attrs:{id:"方法-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-4"}},[a._v("#")]),a._v(" 方法")]),a._v(" "),s("h3",{attrs:{id:"示例-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例-2"}},[a._v("#")]),a._v(" 示例")]),a._v(" "),s("hr"),a._v(" "),s("h2",{attrs:{id:"statemanager"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#statemanager"}},[a._v("#")]),a._v(" StateManager")]),a._v(" "),s("p",[a._v("状态管理对象")]),a._v(" "),s("p",[a._v("状态管理器负责加载、设置和切换游戏状态。")]),a._v(" "),s("p",[a._v("构造函数")]),a._v(" "),s("h3",{attrs:{id:"属性-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性-5"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),s("h3",{attrs:{id:"方法-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-5"}},[a._v("#")]),a._v(" 方法")]),a._v(" "),s("h4",{attrs:{id:"add-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-2"}},[a._v("#")]),a._v(" add()")]),a._v(" "),s("p",[s("strong",[a._v("game.add()")])]),a._v(" "),s("p",[a._v("将新状态添加到 StateManager 中。您必须给每个状态一个唯一的密钥，以便识别它。State 可以是 Phaser.State 对象（或扩展它的对象）、纯 JavaScript 对象或函数。如果给定了一个函数，将通过调用它来创建一个新的状态对象。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" autoStart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("参数")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("key 【string】必选参数")]),a._v(" "),s("ul",[s("li",[a._v("用于引用此状态的唯一键，即“MainMenu”、“Level1”。")])])]),a._v(" "),s("li",[s("p",[a._v("state 【 Phaser.State | object | function】必选参数")]),a._v(" "),s("ul",[s("li",[a._v("要切换到的状态")])])]),a._v(" "),s("li",[s("p",[a._v("autoStart 【boolean】可选参数，默认 false")]),a._v(" "),s("ul",[s("li",[a._v("如果为真，状态将在添加后立即启动")])])])])]),a._v(" "),s("h4",{attrs:{id:"start"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#start"}},[a._v("#")]),a._v(" start()")]),a._v(" "),s("p",[s("strong",[a._v("game.start()")])]),a._v(" "),s("p",[a._v("启动给定的状态。如果一个状态已经在运行，那么在切换到新状态之前将调用 State.shutDown（如果它存在）。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" clearWorld"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" clearCache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("参数")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("key 【string】")]),a._v(" "),s("ul",[s("li",[a._v("要启动的状态的键")])])]),a._v(" "),s("li",[s("p",[a._v("clearWorld 【boolean】默认 true")]),a._v(" "),s("ul",[s("li",[a._v("清除世界上的一切？这会完全清除世界显示列表（但不会清除舞台，因此如果您已将自己的对象添加到舞台，它们将需要直接管理）")])])]),a._v(" "),s("li",[s("p",[a._v("clearCache 【boolean】默认 false")]),a._v(" "),s("ul",[s("li",[a._v("清除游戏缓存？这将清除所有加载的资产。默认值为 false，如果您也想清除缓存，则必须设置 clearWorld=true。")])])]),a._v(" "),s("li",[s("p",[a._v("parameter 【*】")]),a._v(" "),s("ul",[s("li",[a._v("将传递给 State.init 函数的附加参数（如果有的话）。")])])])])]),a._v(" "),s("h3",{attrs:{id:"示例-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例-3"}},[a._v("#")]),a._v(" 示例")]),a._v(" "),s("blockquote",[s("p",[a._v("init()")]),a._v(" "),s("p",[a._v("preload() 加载游戏资源")]),a._v(" "),s("p",[a._v("create 创建游戏显示对象或注册资源")]),a._v(" "),s("p",[a._v("update()")]),a._v(" "),s("p",[a._v("render()")])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 五个函数的执行顺序,从上到下")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("init")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("preload")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("create")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("update")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("render")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//------------------管理场景-----------------")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 添加场景")]),a._v("\ngame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"state"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 启动场景")]),a._v("\ngame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"state"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 当某个资源加载完成时触发")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// game.load.onFileComplete.add(function(){})")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// game.load.process 表示所有资源的加载进度,百分制")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 当所有资源加载完成时触发")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// game.load.onLoadComplete.add(function(){})")]),a._v("\n")])])]),s("hr"),a._v(" "),s("h2",{attrs:{id:"physics-物理引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#physics-物理引擎"}},[a._v("#")]),a._v(" Physics 物理引擎")]),a._v(" "),s("p",[a._v("http://phaser.io/docs/2.6.2/Phaser.Physics.html")]),a._v(" "),s("p",[a._v("物理管理器负责照看所有正在运行的物理系统。\nPhaser 支持 4 种物理系统。Arcade Physics、P2、Ninja Physics 和 Box2D（通过一个商业插件）。")]),a._v(" "),s("p",[a._v("游戏对象（如精灵）只能属于一个物理系统，但你可以在一个游戏中激活多个系统。")]),a._v(" "),s("p",[a._v("例如，你可以让 P2 管理车辆驶过的多边形地形，而它可以发射子弹，使用的是 P2 系统。\n更快（因为更简单）的街机物理系统。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Physics")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" physicsConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("参数")]),a._v(" "),s("ul",[s("li",[a._v("game\n"),s("ul",[s("li",[a._v("对当前运行的游戏的引用。")])])]),a._v(" "),s("li",[a._v("physicsConfig\n"),s("ul",[s("li",[a._v("一个物理配置对象，在创建时传递给物理世界。")])])])])]),a._v(" "),s("h3",{attrs:{id:"属性-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性-6"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),s("h4",{attrs:{id:"arcade"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arcade"}},[a._v("#")]),a._v(" arcade")]),a._v(" "),s("h3",{attrs:{id:"方法-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-6"}},[a._v("#")]),a._v(" 方法")]),a._v(" "),s("h4",{attrs:{id:"startsystem"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#startsystem"}},[a._v("#")]),a._v(" startSystem()")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 初始化 Arcade Physics 引擎")]),a._v("\ngame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("physics"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("startSystem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Phaser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Physics"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ARCADE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h4",{attrs:{id:"clear"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clear"}},[a._v("#")]),a._v(" clear()")]),a._v(" "),s("p",[a._v("<内部方法> clear()\n清理所有活动的物理系统。这并不破坏它们，它只是清除它们的对象，并在状态改变时被调用")]),a._v(" "),s("h4",{attrs:{id:"destroy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#destroy"}},[a._v("#")]),a._v(" destroy()")]),a._v(" "),s("p",[a._v("销毁所有活动的物理系统。通常只在游戏关闭时调用，在状态交换时不调用。")]),a._v(" "),s("h4",{attrs:{id:"enable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enable"}},[a._v("#")]),a._v(" enable()")]),a._v(" "),s("blockquote",[s("p",[a._v("enable(object, system, debug)")])]),a._v(" "),s("blockquote",[s("p",[a._v("参数")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("object 【object | array】")]),a._v(" "),s("p",[a._v("要创建物理体的游戏对象。也可以是一个对象的数组，数组中的每个对象都将被创建一个体。")])]),a._v(" "),s("li",[s("p",[a._v("system 【number】可选，默认 Phaser.Physics.ARCADE")]),a._v(" "),s("p",[a._v("将用于创建身体的物理系统。默认为街机物理。")])]),a._v(" "),s("li",[s("p",[a._v("debug 【boolean】可选，默认 false")]),a._v(" "),s("p",[a._v("启用本体的调试绘图。默认为 false。")])])])]),a._v(" "),s("p",[a._v("这将在给定的游戏对象或对象阵列上创建一个默认物理体。\n一个游戏对象在任何时候都只能有一个激活的物理体，而且在该对象被销毁之前，它不能被改变。\n它可以是任何已经启动的物理系统。")]),a._v(" "),s("p",[a._v("Phaser.Physics.Arcade - 一个基于 AABB 的轻量级碰撞系统，具有基本的分离功能。\nPhaser.Physics.P2JS - 一个全身高级物理系统，支持多种物体形状、多边形加载、接触材料、弹簧和约束。\nPhaser.Physics.NINJA - Metanet Softwares N+物理系统的一个移植。先进的 AABB 和圆形与瓦片的碰撞。\nPhaser.Physics.BOX2D - 移植自https://code.google.com/p/box2d-html5。\nPhaser.Physics.MATTER - 全身和轻量级的高级物理系统（仍在开发中）。\nPhaser.Physics.CHIPMUNK 仍在开发中。")]),a._v(" "),s("p",[a._v("如果你需要对创建的身体类型有更多的控制，例如创建一个 Ninja Physics Circle 而不是默认的 AABB，那么请看\n个别物理系统的启用方法，而不是使用这个通用方法。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 开启球的物理效果")]),a._v("\ngame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("physics"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("enable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("ball"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" Phaser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Physics"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ARCADE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"arcade-physics-街机物理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arcade-physics-街机物理"}},[a._v("#")]),a._v(" Arcade Physics 街机物理")]),a._v(" "),s("p",[a._v("physics.arcade")]),a._v(" "),s("p",[a._v("街机物理学世界。包含街机物理学相关的碰撞、重叠和运动方法。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Arcade")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h3",{attrs:{id:"属性-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性-7"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 初始化 Arcade Physics 引擎")]),a._v("\ngame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("physics"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("startSystem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Phaser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Physics"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ARCADE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 禁用底部的物理碰撞")]),a._v("\ngame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("physics"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("arcade"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("checkCollision"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("down "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h3",{attrs:{id:"方法-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-7"}},[a._v("#")]),a._v(" 方法")]),a._v(" "),s("h4",{attrs:{id:"collide"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collide"}},[a._v("#")]),a._v(" collide()")]),a._v(" "),s("p",[s("strong",[a._v("collide(object1, object2, collideCallback, processCallback, callbackContext) → {boolean}")])]),a._v(" "),s("p",[a._v("检查两个游戏对象之间的碰撞。您可以执行 Sprite 与 Sprite、Sprite 与 Group、Group 与 Group、Sprite 与 Tilemap 层或 Group 与 Tilemap 层的碰撞。")]),a._v(" "),s("p",[a._v("第一个和第二个参数都可以是不同类型的对象数组。如果传递了两个数组，第一个参数的内容将根据第二个参数的所有内容进行测试。对象也会自动分离。如果您不需要分离，请改用 ArcadePhysics.overlap。")]),a._v(" "),s("p",[a._v("可以提供可选的 processCallback。如果给定，当发现两个精灵发生碰撞时将调用此函数。它在任何分离发生之前被调用，让您有机会执行额外的检查。如果函数返回 true，则进行碰撞和分离。如果返回 false，则跳过。")]),a._v(" "),s("p",[a._v("collideCallback 是一个可选函数，只有在两个精灵发生碰撞时才会调用。如果已设置 processCallback，则需要返回 true 才能调用 collideCallback。注意：此函数不是递归的，并且不会针对传递的对象的子对象（即其他组中的组或 Tilemap）进行测试。")]),a._v(" "),s("h4",{attrs:{id:"overlap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overlap"}},[a._v("#")]),a._v(" overlap()")]),a._v(" "),s("p",[a._v("检查两个游戏对象之间的重叠。对象可以是精灵、组或发射器。 您可以执行 Sprite vs. Sprite、Sprite vs. Group 和 Group vs. Group 重叠检查。")]),a._v(" "),s("p",[a._v("与碰撞不同，对象不会自动分离或应用任何物理，它们只是测试重叠结果。 第一个和第二个参数都可以是不同类型的对象数组。")]),a._v(" "),s("p",[a._v("如果传递了两个数组，第一个参数的内容将根据第二个参数的所有内容进行测试。")]),a._v(" "),s("p",[a._v("注意：此函数不是递归的，并且不会针对传递的对象的子对象（即组中的组）进行测试。")]),a._v(" "),s("p",[s("strong",[a._v("overlap(object1, object2, overlapCallback, processCallback, callbackContext) → {boolean}")])]),a._v(" "),s("h2",{attrs:{id:"point"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#point"}},[a._v("#")]),a._v(" Point")]),a._v(" "),s("p",[a._v("点，由 x 和 y 位置组成的 Point 对象")]),a._v(" "),s("p",[a._v("构造函数")]),a._v(" "),s("p",[a._v("new Point(x, y)")]),a._v(" "),s("h3",{attrs:{id:"属性-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性-8"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),s("h3",{attrs:{id:"方法-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-8"}},[a._v("#")]),a._v(" 方法")]),a._v(" "),s("h4",{attrs:{id:"set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[a._v("#")]),a._v(" set()")]),a._v(" "),s("p",[a._v("set(x, y) → {Phaser.Point}")]),a._v(" "),s("p",[a._v("将此 Point 对象的 x 和 y 值设置为给定值。如果忽略 y 值，则 x 值将应用于这两个值，例如：Point.set(2) 与 Point.set(2, 2) 相同")]),a._v(" "),s("hr"),a._v(" "),s("h2",{attrs:{id:"scalemanager-游戏缩放管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scalemanager-游戏缩放管理"}},[a._v("#")]),a._v(" ScaleManager 游戏缩放管理")]),a._v(" "),s("p",[a._v("创建一个新的 ScaleManager 对象 -- 这是由 Phaser.Game 自动完成的。")]),a._v(" "),s("p",[a._v('构造函数的宽度和高度参数可以是一个代表像素的数字，也可以是一个代表百分比的字符串：例如 800（代表 800 像素）或 "80%"代表 80%。')]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ScaleManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" width"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h3",{attrs:{id:"属性-9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性-9"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),s("h4",{attrs:{id:"scalemode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scalemode"}},[a._v("#")]),a._v(" scaleMode")]),a._v(" "),s("p",[a._v("scaleMode 有几个不同的选项来指定 Canvas 应该如何缩放：")]),a._v(" "),s("blockquote",[s("p",[a._v("NO_SCALE — 不进行任何缩放。\nEXACT_FIT — 拉伸，填充屏幕，不保留长宽比。\nSHOW_ALL — 等比缩放，填充屏幕，保留长宽比，剩余空间用黑色填充。\nRESIZE — 动态，每次都会根据屏幕生成画布，所以你需要在游戏运行时动态的放置游戏元素。这是一种进阶的模式。\nUSER_SCALE — 自定义，允许您自己计算大小和比例。这也是一种进阶的模式。")])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("scale"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("scaleMode "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Phaser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ScaleManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("SHOW_ALL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h4",{attrs:{id:"pagealignhorizontally"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pagealignhorizontally"}},[a._v("#")]),a._v(" pageAlignHorizontally")]),a._v(" "),s("p",[a._v("启用后，显示画布将在父容器（或窗口）中水平对齐。")]),a._v(" "),s("p",[a._v("要在整个页面上水平对齐，显示画布应直接添加到页面上。\n或者父容器本身应该是水平对齐的。")]),a._v(" "),s("p",[a._v("水平对齐不适用于 RESIZE 缩放模式。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 水平居中画布，所以它始终以屏幕为中心，无论大小如何")]),a._v("\ngame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("scale"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("pageAlignHorizontally "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h4",{attrs:{id:"pagealignvertically"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pagealignvertically"}},[a._v("#")]),a._v(" pageAlignVertically")]),a._v(" "),s("p",[a._v("启用后，显示画布将在父容器（或窗口）中垂直对齐。")]),a._v(" "),s("p",[a._v("要垂直对齐，Parent 元素应该有一个不可折叠的高度，这样它就能保持\n的高度大于所包含的游戏画布的高度--然后游戏画布将被垂直缩放到\n在父元素所决定的剩余可用高度内垂直缩放。")]),a._v(" "),s("p",[a._v('防止父元素崩溃的一个方法是为父元素添加一个绝对的 "最小高度 "CSS 属性。\n如果指定一个相对的 "最小高度/高度 "或调整边距，父元素的高度仍然必须是不可折叠的（见注释）。')]),a._v(" "),s("p",[a._v("注意：在 2.2 版本中，最小文档高度不会自动设置为视口/窗口高度。\n要自动更新最小文档高度，请将 compatibility.forceMinimumDocumentHeight 设置为 true。")]),a._v(" "),s("p",[a._v("垂直对齐不适用于 RESIZE 缩放模式。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 垂直居中画布，所以它始终以屏幕为中心，无论大小如何")]),a._v("\ngame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("scale"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("pageAlignVertically "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h3",{attrs:{id:"方法-9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-9"}},[a._v("#")]),a._v(" 方法")]),a._v(" "),s("h2",{attrs:{id:"stage-舞台"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stage-舞台"}},[a._v("#")]),a._v(" Stage 舞台")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 设置背景颜色")]),a._v("\ngame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("stage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("backgroundColor "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"#eee"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"animationmanager-动画"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#animationmanager-动画"}},[a._v("#")]),a._v(" AnimationManager 动画")]),a._v(" "),s("h3",{attrs:{id:"属性-10"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性-10"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),s("h3",{attrs:{id:"方法-10"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-10"}},[a._v("#")]),a._v(" 方法")]),a._v(" "),s("h4",{attrs:{id:"add-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-3"}},[a._v("#")]),a._v(" add()")]),a._v(" "),s("blockquote",[s("p",[a._v("add(name, frames, frameRate, loop, useNumericIndex) → {"),s("a",{attrs:{href:"http://phaser.io/docs/2.6.2/Phaser.Animation.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Phaser.Animation"),s("OutboundLink")],1),a._v("}")]),a._v(" "),s("p",[a._v("在给定的键下添加一个新的动画。可以选择设置帧、帧率和循环。\n以这种方式添加的动画可以用播放功能来回放。")])]),a._v(" "),s("blockquote",[s("p",[a._v("参数")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("name 【string】必选")]),a._v(" "),s("p",[a._v('动画的唯一名称（在这个精灵中），即 "运行"、"发射"、"行走"。')])]),a._v(" "),s("li",[s("p",[a._v("frames 【Array】可选，默认 null")]),a._v(" "),s("p",[a._v("一个数字/字符串数组，对应于要添加到这个动画中的帧以及顺序。例如，[1, 2, 3]或者['run0', 'run1', run2]）。如果为空，那么将使用所有帧。")])]),a._v(" "),s("li",[s("p",[a._v("frameRate 【number】可选，默认 60")]),a._v(" "),s("p",[a._v("动画的播放速度。速度的单位是每秒的帧数。")])]),a._v(" "),s("li",[s("p",[a._v("loop 【boolean】可选，默认 false")]),a._v(" "),s("p",[a._v("动画是否循环播放或只播放一次。")])]),a._v(" "),s("li",[s("p",[a._v("useNumericIndex 【boolean】可选，默认 true")]),a._v(" "),s("p",[a._v("给定的框架是使用数字索引（默认）还是字符串？")])])])]),a._v(" "),s("p",[a._v("返回 Phaser.Animation - 被创建的动画对象。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 球绑定抖动动画")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n\t要向对象添加动画，我们使用该animations.add()方法，\n    其中包含以下参数\n\t\t1. 我们为动画选择的名称\n\t\t2. 一个数组，定义在动画过程中显示帧的顺序。\n\t\t\t如果您再次查看wobble.png图像，您会看到有三个框架。\n\t\t\tPhaser 提取它们并将它们存储在数组中 - 位置 0，1 和 2.\n\t\t\t上面的数组表示我们显示帧 0，然后是 1，然后是 0 等。\n\t\t3. 帧速率，以 fps 为单位。由于我们以 24fps 运行动画，有 9 帧，动画每秒将显示三次以下。\n\twobble素材中每个小图都是24px\n*/")]),a._v("\nball"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("animations"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"wobble"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("24")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h4",{attrs:{id:"destory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#destory"}},[a._v("#")]),a._v(" destory()")]),a._v(" "),s("p",[a._v("销毁此 AnimationManager 包含的所有引用。\n遍历存储在此管理器中的动画列表，并对每个动画调用销毁。")]),a._v(" "),s("h4",{attrs:{id:"getanimation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getanimation"}},[a._v("#")]),a._v(" getAnimation()")]),a._v(" "),s("blockquote",[s("p",[a._v("getAnimation(name) → {"),s("a",{attrs:{href:"http://phaser.io/docs/2.6.2/Phaser.Animation.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Phaser.Animation"),s("OutboundLink")],1),a._v("}")]),a._v(" "),s("p",[a._v("返回一个之前被添加的动画的名称。")])]),a._v(" "),s("blockquote",[s("p",[a._v("参数")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("name")]),a._v(" "),s("p",[a._v('要返回的动画的名称，例如 "fire"。')])])])]),a._v(" "),s("p",[a._v("返回 Phaser.Animation - 动画实例（如果找到的话），否则为空 null。")])])}),[],!1,null,null,null);t.default=n.exports}}]);